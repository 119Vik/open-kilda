{
    "swagger": "2.0",
    "info": {
        "description": "Kilda SDN Controller API",
        "version": "1.0",
        "title": "Northbound"
    },
    "host": "localhost",
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "flow-controller",
            "description": "Flow Controller"
        },
        {
            "name": "health-check-controller",
            "description": "Health Check Controller"
        },
        {
            "name": "switch-controller",
            "description": "Switch Controller"
        },
        {
            "name": "link-controller",
            "description": "Link Controller"
        }
    ],
    "paths": {
        "/flows": {
            "get": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Dumps all flows",
                "operationId": "getFlowsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowPayload"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Creates new flow",
                "operationId": "createFlowUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "flow",
                        "description": "flow",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FlowPayload"
                        }
                    },
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowPayload"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/flows/path/{flow-id}": {
            "get": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Gets flow path",
                "operationId": "pathFlowUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "flow-id",
                        "in": "path",
                        "description": "flow-id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowPathPayload"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/flows/status/{flow-id}": {
            "get": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Gets flow status",
                "operationId": "statusFlowUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "flow-id",
                        "in": "path",
                        "description": "flow-id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowIdStatusPayload"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/flows/{flow-id}": {
            "get": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Gets flow",
                "operationId": "getFlowUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "flow-id",
                        "in": "path",
                        "description": "flow-id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowPayload"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Updates flow",
                "operationId": "updateFlowUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "flow-id",
                        "in": "path",
                        "description": "flow-id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "flow",
                        "description": "flow",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FlowPayload"
                        }
                    },
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowPayload"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Deletes flow",
                "operationId": "deleteFlowUsingDELETE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "flow-id",
                        "in": "path",
                        "description": "flow-id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowPayload"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/flows/{flow_id}/reroute": {
            "patch": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Reroute flow",
                "operationId": "rerouteFlowUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "path",
                        "description": "flow_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowPathPayload"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/health-check": {
            "get": {
                "tags": [
                    "health-check-controller"
                ],
                "summary": "Gets health-check status",
                "operationId": "getHealthCheckUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/HealthCheck"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/link/props": {
            "put": {
                "tags": [
                    "link-controller"
                ],
                "summary": "Get all link properties (static), based on arguments.",
                "operationId": "putLinkPropsUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "keysAndProps",
                        "description": "keysAndProps",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkPropsDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/LinkPropsResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "link-controller"
                ],
                "summary": "Get all link properties (static), based on arguments.",
                "operationId": "delLinkPropsUsingDELETE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "keysAndProps",
                        "description": "keysAndProps",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkPropsDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/LinkPropsResult"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/link/props{?src_switch,src_port,dst_switch,dst_port}": {
            "get": {
                "tags": [
                    "link-controller"
                ],
                "summary": "Get all link properties (static), based on arguments.",
                "operationId": "getLinkPropsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "src_switch",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "src_port",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dst_switch",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dst_port",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/LinkPropsDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/links": {
            "get": {
                "tags": [
                    "link-controller"
                ],
                "summary": "Get all links",
                "operationId": "getLinksUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/LinksDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/push/flows": {
            "put": {
                "tags": [
                    "flow-controller"
                ],
                "summary": "Push flows without expectation of modifying switches",
                "operationId": "pushFlowsUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "externalFlows",
                        "description": "externalFlows",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalFlowsDto"
                            }
                        }
                    },
                    {
                        "name": "correlation_id",
                        "in": "header",
                        "description": "correlation_id",
                        "required": true,
                        "type": "string",
                        "default": "admin-request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/BatchResults"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        },
        "/switches": {
            "get": {
                "tags": [
                    "switch-controller"
                ],
                "summary": "Get all available switches",
                "operationId": "getSwitchesUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful",
                        "schema": {
                            "$ref": "#/definitions/FlowPayload"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "500": {
                        "description": "General error",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/MessageError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "FlowIdStatusPayload": {
            "type": "object",
            "properties": {
                "flowid": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Allocated",
                        "In progress",
                        "Up",
                        "Down",
                        "Cached"
                    ]
                }
            }
        },
        "HealthCheck": {
            "type": "object",
            "properties": {
                "components": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "LinkPropsDto": {
            "type": "object",
            "properties": {
                "dst_port": {
                    "type": "string"
                },
                "dst_switch": {
                    "type": "string"
                },
                "props": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "src_port": {
                    "type": "string"
                },
                "src_switch": {
                    "type": "string"
                }
            }
        },
        "FlowPathPayload": {
            "type": "object",
            "properties": {
                "flowid": {
                    "type": "string"
                },
                "flowpath": {
                    "$ref": "#/definitions/PathInfoData"
                }
            }
        },
        "ExternalFlowsDto": {
            "type": "object",
            "properties": {
                "dst_node": {
                    "type": "string"
                },
                "flow_id": {
                    "type": "string"
                },
                "forward_path": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PathNode"
                    }
                },
                "max_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "reverse_path": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PathNode"
                    }
                },
                "src_node": {
                    "type": "string"
                }
            }
        },
        "PathNode": {
            "type": "object",
            "properties": {
                "cookie": {
                    "type": "string"
                },
                "cookie_int": {
                    "type": "integer",
                    "format": "int64"
                },
                "port_no": {
                    "type": "integer",
                    "format": "int32"
                },
                "segment_latency": {
                    "type": "integer",
                    "format": "int64"
                },
                "seq_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "switch_id": {
                    "type": "string"
                },
                "switch_name": {
                    "type": "string"
                }
            }
        },
        "BatchResults": {
            "type": "object",
            "properties": {
                "failures": {
                    "type": "integer",
                    "format": "int32"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "successes": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PathInfoData": {
            "type": "object",
            "properties": {
                "created_in_cache": {
                    "type": "integer",
                    "format": "int64"
                },
                "latency_ns": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PathNode"
                    }
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_in_cache": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "LinkPropsResult": {
            "type": "object",
            "properties": {
                "failures": {
                    "type": "integer",
                    "format": "int32"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "successes": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FlowPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/definitions/FlowEndpointPayload"
                },
                "flowid": {
                    "type": "string"
                },
                "ignore_bandwidth": {
                    "type": "boolean"
                },
                "last-updated": {
                    "type": "string"
                },
                "maximum-bandwidth": {
                    "type": "integer",
                    "format": "int32"
                },
                "source": {
                    "$ref": "#/definitions/FlowEndpointPayload"
                }
            }
        },
        "PathDto": {
            "type": "object",
            "properties": {
                "port_no": {
                    "type": "integer",
                    "format": "int32"
                },
                "segment_latency": {
                    "type": "integer",
                    "format": "int64"
                },
                "seq_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "switch_id": {
                    "type": "string"
                }
            }
        },
        "LinksDto": {
            "type": "object",
            "properties": {
                "available_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PathDto"
                    }
                },
                "speed": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SwitchDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "switch_id": {
                    "type": "string"
                }
            }
        },
        "MessageError": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string"
                },
                "error-description": {
                    "type": "string"
                },
                "error-message": {
                    "type": "string"
                },
                "error-type": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FlowEndpointPayload": {
            "type": "object",
            "properties": {
                "port-id": {
                    "type": "integer",
                    "format": "int32"
                },
                "switch-id": {
                    "type": "string"
                },
                "vlan-id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        }
    }
}